{"paragraphs":[{"text":"%md\n# US Election Prediction - Random Forest\n\n-- County facts dictionary is used for analysis by you (county_facts columns are codes)","user":"anonymous","dateUpdated":"2022-05-24T21:48:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>US Election Prediction - Random Forest</h1>\n<p>&ndash; County facts dictionary is used for analysis by you (county_facts columns are codes)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653425099599_1373619659","id":"20220524-204459_5127827","dateCreated":"2022-05-24T20:44:59+0000","dateStarted":"2022-05-24T21:48:00+0000","dateFinished":"2022-05-24T21:48:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:64368"},{"text":"%sh\r\ncurl https://www.dropbox.com/s/us4gq9zurx4vla1/county_facts.csv --output /var/tmp/county_facts.csv --silent\r\ncurl https://www.dropbox.com/s/ni0iavp58dlx5vf/primary_results.csv --output /var/tmp/primary_results.csv --silent\r\ncurl https://www.dropbox.com/s/wimp3r3e00q8b2x/county_facts_dictionary.csv --output /var/tmp/county_facts_dictionary.csv --silent","user":"anonymous","dateUpdated":"2022-05-24T21:09:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1653425658395_-778279326","id":"20220524-205418_427962106","dateCreated":"2022-05-24T20:54:18+0000","dateStarted":"2022-05-24T20:56:25+0000","dateFinished":"2022-05-24T20:56:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64369"},{"text":"import org.apache.spark.sql.functions._\nimport org.apache.spark.sql.expressions.Window\nimport org.apache.spark.ml.feature.{VectorAssembler, StringIndexer}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nimport org.apache.spark.ml.tuning.{CrossValidator, CrossValidatorModel, ParamGridBuilder}\nimport org.apache.spark.ml.evaluation.{MulticlassClassificationEvaluator}\nimport org.apache.spark.ml.param.ParamMap\nimport org.apache.spark.sql.types.{IntegerType, DoubleType}\n","user":"anonymous","dateUpdated":"2022-05-24T21:02:05+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions._\nimport org.apache.spark.sql.expressions.Window\nimport org.apache.spark.ml.feature.{VectorAssembler, StringIndexer}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nimport org.apache.spark.ml.tuning.{CrossValidator, CrossValidatorModel, ParamGridBuilder}\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.ml.param.ParamMap\nimport org.apache.spark.sql.types.{IntegerType, DoubleType}\n"}]},"apps":[],"jobName":"paragraph_1653425778068_-1589062013","id":"20220524-205618_2135182861","dateCreated":"2022-05-24T20:56:18+0000","dateStarted":"2022-05-24T21:02:05+0000","dateFinished":"2022-05-24T21:02:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64370"},{"text":"val results = spark.read\r\n .format(\"csv\")\r\n .option(\"header\", \"true\")\r\n .load(\"file:///var/tmp/primary_results.csv\")\r\n\r\nval county = spark.read\r\n .format(\"csv\")\r\n .option(\"header\", \"true\")\r\n  .load(\"file:///var/tmp/county_facts.csv\")","user":"anonymous","dateUpdated":"2022-05-24T21:09:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"results: org.apache.spark.sql.DataFrame = [state: string, state_abbreviation: string ... 6 more fields]\ncounty: org.apache.spark.sql.DataFrame = [fips: string, area_name: string ... 52 more fields]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://728940ef7f86:4040/jobs/job?id=245","http://728940ef7f86:4040/jobs/job?id=246"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1653426125489_1776205348","id":"20220524-210205_1923995734","dateCreated":"2022-05-24T21:02:05+0000","dateStarted":"2022-05-24T21:09:45+0000","dateFinished":"2022-05-24T21:09:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64371"},{"text":"val results_rep = results.filter(col(\"party\") === \"Republican\")","user":"anonymous","dateUpdated":"2022-05-24T21:09:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"results_rep: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [state: string, state_abbreviation: string ... 6 more fields]\n"}]},"apps":[],"jobName":"paragraph_1653426196083_-856753057","id":"20220524-210316_344256006","dateCreated":"2022-05-24T21:03:16+0000","dateStarted":"2022-05-24T21:09:49+0000","dateFinished":"2022-05-24T21:09:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64372"},{"text":"//Join results with county\r\nval join_expr = results_rep.col(\"fips\") === county.col(\"fips\").cast(IntegerType)","user":"anonymous","dateUpdated":"2022-05-24T21:09:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"join_expr: org.apache.spark.sql.Column = (fips = CAST(fips AS INT))\n"}]},"apps":[],"jobName":"paragraph_1653426205175_-1953774068","id":"20220524-210325_1615320984","dateCreated":"2022-05-24T21:03:25+0000","dateStarted":"2022-05-24T21:09:53+0000","dateFinished":"2022-05-24T21:09:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64373"},{"text":"%md\n-- To load the information, we need to make sense of the file, we use the description in county_facts_dictionry.csv\n-- White, hispanic, college are all represented by percentages\n-- Income represented the medium household income of the county\n-- pop_density = population per square mile\n-- Here we are joining the results files with the county file based on the county id\n-- we'll cast to the respective types, all numberical columns will be doubles","user":"anonymous","dateUpdated":"2022-05-24T21:20:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>&ndash; To load the information, we need to make sense of the file, we use the description in county_facts_dictionry.csv<br/>&ndash; White, hispanic, college are all represented by percentages<br/>&ndash; Income represented the medium household income of the county<br/>&ndash; pop_density = population per square mile<br/>&ndash; Here we are joining the results files with the county file based on the county id<br/>&ndash; we&rsquo;ll cast to the respective types, all numberical columns will be doubles</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427208440_-954107050","id":"20220524-212008_681318813","dateCreated":"2022-05-24T21:20:08+0000","dateStarted":"2022-05-24T21:20:34+0000","dateFinished":"2022-05-24T21:20:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64374"},{"text":"val raw_dataset = results_rep.join(county, join_expr).drop(county.col(\"fips\")).select(\r\n col(\"fips\").alias(\"county_id\"), \r\n col(\"area_name\").alias(\"county\"), \r\n col(\"RHI125214\").cast(DoubleType).alias(\"white\"), \r\n col(\"RHI725214\").cast(DoubleType).alias(\"hispanic\"), \r\n col(\"INC110213\").cast(DoubleType).alias(\"income\"), \r\n col(\"EDU685213\").cast(DoubleType).alias(\"college\"),\r\n col(\"POP060210\").cast(DoubleType).alias(\"pop_density\"),\r\n col(\"candidate\"), \r\n col(\"fraction_votes\").cast(DoubleType))","user":"anonymous","dateUpdated":"2022-05-24T21:20:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"raw_dataset: org.apache.spark.sql.DataFrame = [county_id: string, county: string ... 7 more fields]\n"}]},"apps":[],"jobName":"paragraph_1653426220292_1412106411","id":"20220524-210340_791099755","dateCreated":"2022-05-24T21:03:40+0000","dateStarted":"2022-05-24T21:20:40+0000","dateFinished":"2022-05-24T21:20:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64375"},{"text":"raw_dataset.show(5)","user":"anonymous","dateUpdated":"2022-05-24T21:20:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+--------------+-----+--------+-------+-------+-----------+------------+--------------+\n|county_id|        county|white|hispanic| income|college|pop_density|   candidate|fraction_votes|\n+---------+--------------+-----+--------+-------+-------+-----------+------------+--------------+\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8|  Ben Carson|         0.146|\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8|Donald Trump|         0.445|\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8| John Kasich|         0.035|\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8| Marco Rubio|         0.148|\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8|    Ted Cruz|         0.205|\n+---------+--------------+-----+--------+-------+-------+-----------+------------+--------------+\nonly showing top 5 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://728940ef7f86:4040/jobs/job?id=400","http://728940ef7f86:4040/jobs/job?id=401"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1653427255532_208154525","id":"20220524-212055_954538372","dateCreated":"2022-05-24T21:20:55+0000","dateStarted":"2022-05-24T21:20:59+0000","dateFinished":"2022-05-24T21:20:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64376"},{"text":"%md\r\n### Group by county & Rank by votes  \r\n-- We don't have a winner column but we can derive it (recall feature engineering)\r\n-- We can group the records by county, and within each county we rank the records by fraction_votes\r\n-- Next we filter the records with rank 1\r\n-- We are using a window function to group the records by county","user":"anonymous","dateUpdated":"2022-05-24T21:21:48+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Group by county &amp; Rank by votes</h3>\n<p>&ndash; We don&rsquo;t have a winner column but we can derive it (recall feature engineering)<br/>&ndash; We can group the records by county, and within each county we rank the records by fraction_votes<br/>&ndash; Next we filter the records with rank 1<br/>&ndash; We are using a window function to group the records by county</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427295835_83243810","id":"20220524-212135_448016882","dateCreated":"2022-05-24T21:21:35+0000","dateStarted":"2022-05-24T21:21:48+0000","dateFinished":"2022-05-24T21:21:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64377"},{"text":"%spark\r\n\r\nval windowSpec = Window.partitionBy(col(\"county_id\")).orderBy(col(\"fraction_votes\").desc)\r\nval ranking = rank().over(windowSpec)","user":"anonymous","dateUpdated":"2022-05-24T21:26:24+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"windowSpec: org.apache.spark.sql.expressions.WindowSpec = org.apache.spark.sql.expressions.WindowSpec@600a4976\nranking: org.apache.spark.sql.Column = RANK() OVER (PARTITION BY county_id ORDER BY fraction_votes DESC NULLS LAST unspecifiedframe$())\n"}]},"apps":[],"jobName":"paragraph_1653426270557_418089437","id":"20220524-210430_1901327476","dateCreated":"2022-05-24T21:04:30+0000","dateStarted":"2022-05-24T21:26:24+0000","dateFinished":"2022-05-24T21:26:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64378"},{"text":"%md\n\n-- Next we select the columns that we need\n-- And we fetch just the records with rank 1\n-- We are also filtering out a candidate called Ben Carson\n-- Ben Carson dropped out and it causes issues here\n\n\n","user":"anonymous","dateUpdated":"2022-05-24T21:26:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>&ndash; Next we select the columns that we need<br/>&ndash; And we fetch just the records with rank 1<br/>&ndash; We are also filtering out a candidate called Ben Carson<br/>&ndash; Ben Carson dropped out and it causes issues here</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427591427_717990700","id":"20220524-212631_495766903","dateCreated":"2022-05-24T21:26:31+0000","dateStarted":"2022-05-24T21:26:43+0000","dateFinished":"2022-05-24T21:26:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64379"},{"text":"\r\nval dataset = raw_dataset.select(col(\"county_id\"), col(\"county\"), col(\"white\"), col(\"hispanic\"), \r\n col(\"income\"), col(\"college\"), col(\"pop_density\"), col(\"candidate\"), col(\"fraction_votes\"), ranking.alias(\"rank\"))\r\n .filter(col(\"rank\") === lit(1) and !(col(\"candidate\") === lit(\"Ben Carson\")))","user":"anonymous","dateUpdated":"2022-05-24T21:26:31+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dataset: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [county_id: string, county: string ... 8 more fields]\n"}]},"apps":[],"jobName":"paragraph_1653426274325_-1823032819","id":"20220524-210434_1141201020","dateCreated":"2022-05-24T21:04:34+0000","dateStarted":"2022-05-24T21:10:01+0000","dateFinished":"2022-05-24T21:10:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64380"},{"text":"%md\n-- Split our dataset into training and test data typical 80 20\n-- we give a seed so we have the same random data in each set","user":"anonymous","dateUpdated":"2022-05-24T21:27:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>&ndash; Split our dataset into training and test data typical 80 20<br/>&ndash; we give a seed so we have the same random data in each set</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427643482_1234860547","id":"20220524-212723_1534824503","dateCreated":"2022-05-24T21:27:23+0000","dateStarted":"2022-05-24T21:27:27+0000","dateFinished":"2022-05-24T21:27:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64381"},{"text":"%spark\r\nval Array(trainingData, testData) = dataset.randomSplit(Array(0.8, 0.2), 754) ","user":"anonymous","dateUpdated":"2022-05-24T21:27:40+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [county_id: string, county: string ... 8 more fields]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [county_id: string, county: string ... 8 more fields]\n"}]},"apps":[],"jobName":"paragraph_1653426297635_1025946860","id":"20220524-210457_1685710338","dateCreated":"2022-05-24T21:04:57+0000","dateStarted":"2022-05-24T21:27:35+0000","dateFinished":"2022-05-24T21:27:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64382"},{"text":"%md\n### Index the candidate (String) column\n-- Our candidate column is of type string --> not very good for ML algorithms\n-- We use the StringIndexer to index the column values to number \n-- Ex Donald Trump = 1, Ted Cruz = 2, etc...\n-- We call this new column \"candidate_index\"\n-- note this is the reason we get rid of Ben Carson --> he only has two values, can end up in test set \n-- model will train it based on the training set and will give error (what is ben carson)","user":"anonymous","dateUpdated":"2022-05-24T21:29:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Index the candidate (String) column</h3>\n<p>&ndash; Our candidate column is of type string &ndash;&gt; not very good for ML algorithms<br/>&ndash; We use the StringIndexer to index the column values to number<br/>&ndash; Ex Donald Trump = 1, Ted Cruz = 2, etc&hellip;<br/>&ndash; We call this new column &ldquo;candidate_index&rdquo;<br/>&ndash; note this is the reason we get rid of Ben Carson &ndash;&gt; he only has two values, can end up in test set<br/>&ndash; model will train it based on the training set and will give error (what is ben carson)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427668005_1271925058","id":"20220524-212748_70142815","dateCreated":"2022-05-24T21:27:48+0000","dateStarted":"2022-05-24T21:29:17+0000","dateFinished":"2022-05-24T21:29:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64383"},{"text":"%spark\r\n\r\nval indexer = new StringIndexer()\r\n  .setInputCol(\"candidate\")\r\n  .setOutputCol(\"candidate_indexed\")    ","user":"anonymous","dateUpdated":"2022-05-24T21:27:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"indexer: org.apache.spark.ml.feature.StringIndexer = strIdx_c4f7f0c058a3\n"}]},"apps":[],"jobName":"paragraph_1653426325553_1759824311","id":"20220524-210525_1112591570","dateCreated":"2022-05-24T21:05:25+0000","dateStarted":"2022-05-24T21:10:08+0000","dateFinished":"2022-05-24T21:10:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64384"},{"text":"%md\r\n### Assemble all features\r\n-- Next we assemble our features using vector assembler, this time we have more than one feature","user":"anonymous","dateUpdated":"2022-05-24T21:29:37+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Assemble all features</h3>\n<p>&ndash; Next we assemble our features using vector assembler, this time we have more than one feature</p>\n<p>val assembler = new VectorAssembler()<br/> .setInputCols(Array(&ldquo;white&rdquo;, &ldquo;hispanic&rdquo;, &ldquo;income&rdquo;, &ldquo;college&rdquo;, &ldquo;pop_density&rdquo;))<br/> .setOutputCol(&ldquo;assembled-features&rdquo;)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653426343032_133796397","id":"20220524-210543_1297999423","dateCreated":"2022-05-24T21:05:43+0000","dateStarted":"2022-05-24T21:29:31+0000","dateFinished":"2022-05-24T21:29:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64385"},{"text":"%spark\nval assembler = new VectorAssembler()\n .setInputCols(Array(\"white\", \"hispanic\", \"income\", \"college\", \"pop_density\"))\n .setOutputCol(\"assembled-features\")","user":"anonymous","dateUpdated":"2022-05-24T21:29:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"assembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_3bcd77e4579c\n"}]},"apps":[],"jobName":"paragraph_1653427778135_-1178995658","id":"20220524-212938_1299558361","dateCreated":"2022-05-24T21:29:38+0000","dateStarted":"2022-05-24T21:29:42+0000","dateFinished":"2022-05-24T21:29:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64386"},{"text":"%md\n### Random Forest  \n-- We now create a new random forest object \n-- give features (as a vector)\n-- give the label as candiate_indexed (can't use the string column)\n","user":"anonymous","dateUpdated":"2022-05-24T21:30:07+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Random Forest</h3>\n<p>&ndash; We now create a new random forest object<br/>&ndash; give features (as a vector)<br/>&ndash; give the label as candiate_indexed (can&rsquo;t use the string column)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427788863_-2045669960","id":"20220524-212948_21459642","dateCreated":"2022-05-24T21:29:48+0000","dateStarted":"2022-05-24T21:30:07+0000","dateFinished":"2022-05-24T21:30:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64387"},{"text":"%spark\r\n\r\nval rf = new RandomForestClassifier()\r\n .setFeaturesCol(\"assembled-features\")\r\n .setLabelCol(\"candidate_indexed\")\r\n .setSeed(1234)","user":"anonymous","dateUpdated":"2022-05-24T21:29:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rf: org.apache.spark.ml.classification.RandomForestClassifier = rfc_cef38db03f8b\n"}]},"apps":[],"jobName":"paragraph_1653426358041_685717886","id":"20220524-210558_1855554244","dateCreated":"2022-05-24T21:05:58+0000","dateStarted":"2022-05-24T21:10:13+0000","dateFinished":"2022-05-24T21:10:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64388"},{"text":"%md\r\n### Set up pipeline\r\n-- Use pipepline to set our stages\r\n-- So our stages are the string indexer, the vector assembler and the random forest classifier object\r\n","user":"anonymous","dateUpdated":"2022-05-24T21:30:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Set up pipeline</h3>\n<p>&ndash; Use pipepline to set our stages<br/>&ndash; So our stages are the string indexer, the vector assembler and the random forest classifier object</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653426455059_-2047938659","id":"20220524-210735_247871367","dateCreated":"2022-05-24T21:07:35+0000","dateStarted":"2022-05-24T21:30:34+0000","dateFinished":"2022-05-24T21:30:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64389"},{"text":"%spark\nval pipeline = new Pipeline()\n  .setStages(Array(indexer, assembler, rf))","user":"anonymous","dateUpdated":"2022-05-24T21:30:33+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"pipeline: org.apache.spark.ml.Pipeline = pipeline_26e58153b11b\n"}]},"apps":[],"jobName":"paragraph_1653427829366_1719468728","id":"20220524-213029_1138249072","dateCreated":"2022-05-24T21:30:29+0000","dateStarted":"2022-05-24T21:30:33+0000","dateFinished":"2022-05-24T21:30:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64390"},{"text":"%md\n### Evaluate the model\n-- Next we provide the evaluator\n-- For regressoin we used RegressionEvaluator\n-- the metric accuracy was simply a percentage\n-- Here we are using MulticlassClassificationEvaluator\n-- we compared candidate_indexed ot the prediction column\n-- IF the match, prediction is good else it is unsuccession\n-- metric \"accuracy\" is basically percentage of accurate results\n","user":"anonymous","dateUpdated":"2022-05-24T21:31:04+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Evaluate the model</h3>\n<p>&ndash; Next we provide the evaluator<br/>&ndash; For regressoin we used RegressionEvaluator<br/>&ndash; the metric accuracy was simply a percentage<br/>&ndash; Here we are using MulticlassClassificationEvaluator<br/>&ndash; we compared candidate_indexed ot the prediction column<br/>&ndash; IF the match, prediction is good else it is unsuccession<br/>&ndash; metric &ldquo;accuracy&rdquo; is basically percentage of accurate results</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427843561_232407622","id":"20220524-213043_337255215","dateCreated":"2022-05-24T21:30:43+0000","dateStarted":"2022-05-24T21:31:04+0000","dateFinished":"2022-05-24T21:31:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64391"},{"text":"%spark\r\nval evaluator = new MulticlassClassificationEvaluator()\r\n  .setLabelCol(\"candidate_indexed\")\r\n  .setPredictionCol(\"prediction\")\r\n  .setMetricName(\"accuracy\")","user":"anonymous","dateUpdated":"2022-05-24T21:31:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"evaluator: org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator = mcEval_ae7a59a3e588\n"}]},"apps":[],"jobName":"paragraph_1653426466699_1263090794","id":"20220524-210746_1744736681","dateCreated":"2022-05-24T21:07:46+0000","dateStarted":"2022-05-24T21:31:06+0000","dateFinished":"2022-05-24T21:31:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64392"},{"text":"%md\n### Hyper parameters\n-- First is maxDepth, it's an array with two values, 5, 10 \n-- maxDepth puts a limit on how deep we can construct the tree\n-- Remember, we said that with decision trees main problem was overfitting the data\n-- random forest does a better job but still, there is an issue if we allow the tree to be too deep\n-- so good idea to set the max depth\n-- Second is impurity which we give as entropy (there are other statistical methods to select features).","user":"anonymous","dateUpdated":"2022-05-24T21:31:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Hyper parameters</h3>\n<p>&ndash; First is maxDepth, it&rsquo;s an array with two values, 5, 10<br/>&ndash; maxDepth puts a limit on how deep we can construct the tree<br/>&ndash; Remember, we said that with decision trees main problem was overfitting the data<br/>&ndash; random forest does a better job but still, there is an issue if we allow the tree to be too deep<br/>&ndash; so good idea to set the max depth<br/>&ndash; Second is impurity which we give as entropy (there are other statistical methods to select features).<br/>*/</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427882776_1996485706","id":"20220524-213122_1395868401","dateCreated":"2022-05-24T21:31:22+0000","dateStarted":"2022-05-24T21:31:38+0000","dateFinished":"2022-05-24T21:31:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64393"},{"text":"%spark\r\n\r\nval paramGrid = new ParamGridBuilder()  \r\n  .addGrid(rf.maxDepth, Array(3, 5))\r\n  .addGrid(rf.impurity, Array(\"entropy\",\"gini\")).build()","user":"anonymous","dateUpdated":"2022-05-24T21:31:22+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"paramGrid: Array[org.apache.spark.ml.param.ParamMap] =\nArray({\n\trfc_cef38db03f8b-impurity: entropy,\n\trfc_cef38db03f8b-maxDepth: 3\n}, {\n\trfc_cef38db03f8b-impurity: gini,\n\trfc_cef38db03f8b-maxDepth: 3\n}, {\n\trfc_cef38db03f8b-impurity: entropy,\n\trfc_cef38db03f8b-maxDepth: 5\n}, {\n\trfc_cef38db03f8b-impurity: gini,\n\trfc_cef38db03f8b-maxDepth: 5\n})\n"}]},"apps":[],"jobName":"paragraph_1653426482579_1085380568","id":"20220524-210802_1979176409","dateCreated":"2022-05-24T21:08:02+0000","dateStarted":"2022-05-24T21:10:19+0000","dateFinished":"2022-05-24T21:10:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64394"},{"text":"%md\n### Cross validate model\n-- Next we tie everything together with cross-validator\n-- We set the pipeline for estimator\n-- Multiclassevaluator for evaluator\n-- Set the hyper parameters and the number of folds\n-- Cross validator will divide the training data set into 3\n-- Next each fold is coupled with the paramters for each type\n-- Fold 1 is tried with max depth 3 and entropy and then fold 1 is again tried but this time with max depth 5 and entrop\n-- Next fold 2 is tried with max depth 3 and entropy, and again with max depth 5 and entropy\n-- And so on ...\n-- In total, we will have 3 (folds) x 2 (depth) x 2 (algorithms) = 12 models\n-- the best model is picked","user":"anonymous","dateUpdated":"2022-05-24T21:32:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Cross validate model</h3>\n<p>&ndash; Next we tie everything together with cross-validator<br/>&ndash; We set the pipeline for estimator<br/>&ndash; Multiclassevaluator for evaluator<br/>&ndash; Set the hyper parameters and the number of folds<br/>&ndash; Cross validator will divide the training data set into 3<br/>&ndash; Next each fold is coupled with the paramters for each type<br/>&ndash; Fold 1 is tried with max depth 3 and entropy and then fold 1 is again tried but this time with max depth 5 and entrop<br/>&ndash; Next fold 2 is tried with max depth 3 and entropy, and again with max depth 5 and entropy<br/>&ndash; And so on &hellip;<br/>&ndash; In total, we will have 3 (folds) x 2 (depth) x 2 (algorithms) = 12 models<br/>&ndash; the best model is picked</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427920748_1829181957","id":"20220524-213200_1654800835","dateCreated":"2022-05-24T21:32:00+0000","dateStarted":"2022-05-24T21:32:12+0000","dateFinished":"2022-05-24T21:32:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64395"},{"text":"%spark\r\nval cross_validator = new CrossValidator()\r\n  .setEstimator(pipeline)\r\n  .setEvaluator(evaluator)\r\n  .setEstimatorParamMaps(paramGrid)\r\n  .setNumFolds(3)","user":"anonymous","dateUpdated":"2022-05-24T21:32:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cross_validator: org.apache.spark.ml.tuning.CrossValidator = cv_a44b642368eb\n"}]},"apps":[],"jobName":"paragraph_1653426499344_1529209304","id":"20220524-210819_645808556","dateCreated":"2022-05-24T21:08:19+0000","dateStarted":"2022-05-24T21:10:23+0000","dateFinished":"2022-05-24T21:10:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64396"},{"text":"%md\n### Training\n-- Train the model on training data\n-- Gives us the best model from the 6 variations\n","user":"anonymous","dateUpdated":"2022-05-24T21:33:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Training</h3>\n<p>&ndash; Train the model on training data<br/>&ndash; Gives us the best model from the 6 variations</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653427942107_-57648992","id":"20220524-213222_2035364939","dateCreated":"2022-05-24T21:32:22+0000","dateStarted":"2022-05-24T21:33:18+0000","dateFinished":"2022-05-24T21:33:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64397"},{"text":"%spark\r\nval cvModel = cross_validator.fit(trainingData)","user":"anonymous","dateUpdated":"2022-05-24T21:33:20+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"cvModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_a44b642368eb\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://728940ef7f86:4040/jobs/job?id=402","http://728940ef7f86:4040/jobs/job?id=403","http://728940ef7f86:4040/jobs/job?id=404","http://728940ef7f86:4040/jobs/job?id=405","http://728940ef7f86:4040/jobs/job?id=406","http://728940ef7f86:4040/jobs/job?id=407","http://728940ef7f86:4040/jobs/job?id=408","http://728940ef7f86:4040/jobs/job?id=409","http://728940ef7f86:4040/jobs/job?id=410","http://728940ef7f86:4040/jobs/job?id=411","http://728940ef7f86:4040/jobs/job?id=412","http://728940ef7f86:4040/jobs/job?id=413","http://728940ef7f86:4040/jobs/job?id=414","http://728940ef7f86:4040/jobs/job?id=415","http://728940ef7f86:4040/jobs/job?id=416","http://728940ef7f86:4040/jobs/job?id=417","http://728940ef7f86:4040/jobs/job?id=418","http://728940ef7f86:4040/jobs/job?id=419","http://728940ef7f86:4040/jobs/job?id=420","http://728940ef7f86:4040/jobs/job?id=421","http://728940ef7f86:4040/jobs/job?id=422","http://728940ef7f86:4040/jobs/job?id=423","http://728940ef7f86:4040/jobs/job?id=424","http://728940ef7f86:4040/jobs/job?id=425","http://728940ef7f86:4040/jobs/job?id=426","http://728940ef7f86:4040/jobs/job?id=427","http://728940ef7f86:4040/jobs/job?id=428","http://728940ef7f86:4040/jobs/job?id=429","http://728940ef7f86:4040/jobs/job?id=430","http://728940ef7f86:4040/jobs/job?id=431","http://728940ef7f86:4040/jobs/job?id=432","http://728940ef7f86:4040/jobs/job?id=433","http://728940ef7f86:4040/jobs/job?id=434","http://728940ef7f86:4040/jobs/job?id=435","http://728940ef7f86:4040/jobs/job?id=436","http://728940ef7f86:4040/jobs/job?id=437","http://728940ef7f86:4040/jobs/job?id=438","http://728940ef7f86:4040/jobs/job?id=439","http://728940ef7f86:4040/jobs/job?id=440","http://728940ef7f86:4040/jobs/job?id=441","http://728940ef7f86:4040/jobs/job?id=442","http://728940ef7f86:4040/jobs/job?id=443","http://728940ef7f86:4040/jobs/job?id=444","http://728940ef7f86:4040/jobs/job?id=445","http://728940ef7f86:4040/jobs/job?id=446","http://728940ef7f86:4040/jobs/job?id=447","http://728940ef7f86:4040/jobs/job?id=448","http://728940ef7f86:4040/jobs/job?id=449","http://728940ef7f86:4040/jobs/job?id=450","http://728940ef7f86:4040/jobs/job?id=451","http://728940ef7f86:4040/jobs/job?id=452","http://728940ef7f86:4040/jobs/job?id=453","http://728940ef7f86:4040/jobs/job?id=454","http://728940ef7f86:4040/jobs/job?id=455","http://728940ef7f86:4040/jobs/job?id=456","http://728940ef7f86:4040/jobs/job?id=457","http://728940ef7f86:4040/jobs/job?id=458","http://728940ef7f86:4040/jobs/job?id=459","http://728940ef7f86:4040/jobs/job?id=460","http://728940ef7f86:4040/jobs/job?id=461","http://728940ef7f86:4040/jobs/job?id=462","http://728940ef7f86:4040/jobs/job?id=463","http://728940ef7f86:4040/jobs/job?id=464","http://728940ef7f86:4040/jobs/job?id=465","http://728940ef7f86:4040/jobs/job?id=466","http://728940ef7f86:4040/jobs/job?id=467","http://728940ef7f86:4040/jobs/job?id=468","http://728940ef7f86:4040/jobs/job?id=469","http://728940ef7f86:4040/jobs/job?id=470","http://728940ef7f86:4040/jobs/job?id=471","http://728940ef7f86:4040/jobs/job?id=472","http://728940ef7f86:4040/jobs/job?id=473","http://728940ef7f86:4040/jobs/job?id=474","http://728940ef7f86:4040/jobs/job?id=475","http://728940ef7f86:4040/jobs/job?id=476","http://728940ef7f86:4040/jobs/job?id=477","http://728940ef7f86:4040/jobs/job?id=478","http://728940ef7f86:4040/jobs/job?id=479","http://728940ef7f86:4040/jobs/job?id=480","http://728940ef7f86:4040/jobs/job?id=481","http://728940ef7f86:4040/jobs/job?id=482","http://728940ef7f86:4040/jobs/job?id=483","http://728940ef7f86:4040/jobs/job?id=484","http://728940ef7f86:4040/jobs/job?id=485","http://728940ef7f86:4040/jobs/job?id=486","http://728940ef7f86:4040/jobs/job?id=487","http://728940ef7f86:4040/jobs/job?id=488","http://728940ef7f86:4040/jobs/job?id=489","http://728940ef7f86:4040/jobs/job?id=490","http://728940ef7f86:4040/jobs/job?id=491","http://728940ef7f86:4040/jobs/job?id=492","http://728940ef7f86:4040/jobs/job?id=493","http://728940ef7f86:4040/jobs/job?id=494","http://728940ef7f86:4040/jobs/job?id=495","http://728940ef7f86:4040/jobs/job?id=496","http://728940ef7f86:4040/jobs/job?id=497","http://728940ef7f86:4040/jobs/job?id=498","http://728940ef7f86:4040/jobs/job?id=499","http://728940ef7f86:4040/jobs/job?id=500","http://728940ef7f86:4040/jobs/job?id=501","http://728940ef7f86:4040/jobs/job?id=502","http://728940ef7f86:4040/jobs/job?id=503","http://728940ef7f86:4040/jobs/job?id=504","http://728940ef7f86:4040/jobs/job?id=505","http://728940ef7f86:4040/jobs/job?id=506","http://728940ef7f86:4040/jobs/job?id=507","http://728940ef7f86:4040/jobs/job?id=508","http://728940ef7f86:4040/jobs/job?id=509","http://728940ef7f86:4040/jobs/job?id=510","http://728940ef7f86:4040/jobs/job?id=511","http://728940ef7f86:4040/jobs/job?id=512","http://728940ef7f86:4040/jobs/job?id=513","http://728940ef7f86:4040/jobs/job?id=514","http://728940ef7f86:4040/jobs/job?id=515","http://728940ef7f86:4040/jobs/job?id=516","http://728940ef7f86:4040/jobs/job?id=517","http://728940ef7f86:4040/jobs/job?id=518","http://728940ef7f86:4040/jobs/job?id=519","http://728940ef7f86:4040/jobs/job?id=520","http://728940ef7f86:4040/jobs/job?id=521","http://728940ef7f86:4040/jobs/job?id=522","http://728940ef7f86:4040/jobs/job?id=523","http://728940ef7f86:4040/jobs/job?id=524","http://728940ef7f86:4040/jobs/job?id=525","http://728940ef7f86:4040/jobs/job?id=526","http://728940ef7f86:4040/jobs/job?id=527","http://728940ef7f86:4040/jobs/job?id=528","http://728940ef7f86:4040/jobs/job?id=529","http://728940ef7f86:4040/jobs/job?id=530","http://728940ef7f86:4040/jobs/job?id=531","http://728940ef7f86:4040/jobs/job?id=532","http://728940ef7f86:4040/jobs/job?id=533","http://728940ef7f86:4040/jobs/job?id=534","http://728940ef7f86:4040/jobs/job?id=535","http://728940ef7f86:4040/jobs/job?id=536","http://728940ef7f86:4040/jobs/job?id=537","http://728940ef7f86:4040/jobs/job?id=538","http://728940ef7f86:4040/jobs/job?id=539","http://728940ef7f86:4040/jobs/job?id=540","http://728940ef7f86:4040/jobs/job?id=541","http://728940ef7f86:4040/jobs/job?id=542","http://728940ef7f86:4040/jobs/job?id=543","http://728940ef7f86:4040/jobs/job?id=544","http://728940ef7f86:4040/jobs/job?id=545","http://728940ef7f86:4040/jobs/job?id=546","http://728940ef7f86:4040/jobs/job?id=547","http://728940ef7f86:4040/jobs/job?id=548"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1653426515153_1525165966","id":"20220524-210835_1867685249","dateCreated":"2022-05-24T21:08:35+0000","dateStarted":"2022-05-24T21:33:20+0000","dateFinished":"2022-05-24T21:36:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64398"},{"text":"%md\n### Predicting with test data\n-- Transform testData with predictions","user":"anonymous","dateUpdated":"2022-05-24T21:33:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Predicting with test data</h3>\n<p>&ndash; Transform testData with predictions</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653428006643_-258452223","id":"20220524-213326_101929050","dateCreated":"2022-05-24T21:33:26+0000","dateStarted":"2022-05-24T21:33:45+0000","dateFinished":"2022-05-24T21:33:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64399"},{"text":"%spark\r\nval predictions = cvModel.transform(testData)","user":"anonymous","dateUpdated":"2022-05-24T21:34:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"predictions: org.apache.spark.sql.DataFrame = [county_id: string, county: string ... 13 more fields]\n"}]},"apps":[],"jobName":"paragraph_1653426525833_574532057","id":"20220524-210845_537603845","dateCreated":"2022-05-24T21:08:45+0000","dateStarted":"2022-05-24T21:10:29+0000","dateFinished":"2022-05-24T21:13:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64400"},{"text":"%spark\npredictions.select(\"candidate\",\"candidate_indexed\",\"rawPrediction\").show(20)","user":"anonymous","dateUpdated":"2022-05-24T21:39:50+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------+-----------------+--------------------+\n|   candidate|candidate_indexed|       rawPrediction|\n+------------+-----------------+--------------------+\n|    Ted Cruz|              1.0|[14.9137827116600...|\n|Donald Trump|              0.0|[9.08577550647354...|\n|    Ted Cruz|              1.0|[12.6011194080590...|\n|Donald Trump|              0.0|[16.3446524466026...|\n|Donald Trump|              0.0|[16.3153246743415...|\n|    Ted Cruz|              1.0|[16.6362368325650...|\n|Donald Trump|              0.0|[15.3387560874019...|\n|Donald Trump|              0.0|[17.3958097277109...|\n|Donald Trump|              0.0|[16.3531953959135...|\n|Donald Trump|              0.0|[14.6185455663133...|\n|    Ted Cruz|              1.0|[16.1091023252620...|\n|Donald Trump|              0.0|[16.3380486730177...|\n|    Ted Cruz|              1.0|[16.0774352379042...|\n|Donald Trump|              0.0|[15.5007050706240...|\n|Donald Trump|              0.0|[14.4027642837932...|\n|Donald Trump|              0.0|[17.2449902485680...|\n|Donald Trump|              0.0|[15.7546367825659...|\n|Donald Trump|              0.0|[14.8794549047261...|\n| Marco Rubio|              3.0|[13.0829007582080...|\n|Donald Trump|              0.0|[16.9721553484904...|\n+------------+-----------------+--------------------+\nonly showing top 20 rows\n\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://728940ef7f86:4040/jobs/job?id=567","http://728940ef7f86:4040/jobs/job?id=568","http://728940ef7f86:4040/jobs/job?id=569","http://728940ef7f86:4040/jobs/job?id=570"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1653428051111_1635101382","id":"20220524-213411_820575387","dateCreated":"2022-05-24T21:34:11+0000","dateStarted":"2022-05-24T21:39:50+0000","dateFinished":"2022-05-24T21:39:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64401"},{"text":"%md\n### Evaluating the model\n-- check with actual values and print accuracy\n","user":"anonymous","dateUpdated":"2022-05-24T21:34:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Evaluating the model</h3>\n<p>&ndash; check with actual values and print accuracy</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1653428070967_-349938426","id":"20220524-213430_1842724275","dateCreated":"2022-05-24T21:34:30+0000","dateStarted":"2022-05-24T21:34:47+0000","dateFinished":"2022-05-24T21:34:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64402"},{"text":"%spark\r\nval accuracy = evaluator.evaluate(predictions)\r\nprintln(\"accuracy on test data = \" + accuracy)","user":"anonymous","dateUpdated":"2022-05-24T21:41:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"accuracy on test data = 0.7638376383763837\naccuracy: Double = 0.7638376383763837\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://728940ef7f86:4040/jobs/job?id=571","http://728940ef7f86:4040/jobs/job?id=572","http://728940ef7f86:4040/jobs/job?id=573"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1653426534698_-1813342377","id":"20220524-210854_167807770","dateCreated":"2022-05-24T21:08:54+0000","dateStarted":"2022-05-24T21:41:00+0000","dateFinished":"2022-05-24T21:41:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:64403"}],"name":"Spark_Classification_Election","id":"2H39MY689","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}