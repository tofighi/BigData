{
  "paragraphs": [
    {
      "text": "%md\n# US Election Prediction - Random Forest\n\n-- County facts dictionary is used for analysis by you (county_facts columns are codes)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:19:23+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>US Election Prediction - Random Forest</h1>\n<p>&ndash; County facts dictionary is used for analysis by you (county_facts columns are codes)</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535936_1428417390",
      "id": "20220524-204459_5127827",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:274",
      "dateFinished": "2022-05-24T22:19:23+0000",
      "dateStarted": "2022-05-24T22:19:23+0000"
    },
    {
      "text": "%sh\r\nrm -r /var/tmp/*.csv\r\nwget -q https://raw.githubusercontent.com/tofighi/dataset/main/big-data/election2016/county_facts_dictionary.csv -O /var/tmp/county_facts.csv\r\nwget -q https://raw.githubusercontent.com/tofighi/dataset/main/big-data/election2016/primary_results.csv -O /var/tmp/primary_results.csv\r\nwget -q https://raw.githubusercontent.com/tofighi/dataset/main/big-data/election2016/county_facts_dictionary.csv -O /var/tmp/county_facts_dictionary.csv\r\nls -lah /var/tmp",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:19:23+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/sh",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "total 1.6M\ndrwxrwxrwt  5 root     root     4.0K May 24 22:19 .\ndrwxr-xr-x 12 root     root     4.0K May 13 13:36 ..\n-rw-r--r--  1 zeppelin zeppelin 2.7K May 24 22:19 county_facts.csv\r\n-rw-r--r--  1 zeppelin zeppelin 2.7K May 24 22:19 county_facts_dictionary.csv\r\n-rw-r--r--  1 root     root       71 May 24 22:18 fluentd.dataproc.agent.pos\n-rw-r--r--  1 root     root        0 May 24 21:52 fluentd.dataproc.dpms-proxy.pos\n-rw-r--r--  1 root     root      785 May 24 22:19 fluentd.dataproc.hadoop.pos\n-rw-r--r--  1 root     root        0 May 24 21:52 fluentd.dataproc.metadata-proxy.pos\n-rw-r--r--  1 root     root      152 May 24 21:53 fluentd.dataproc.startup.pos\n-rw-r--r--  1 root     root     3.5K May 24 22:13 fluentd.dataproc.yarn-userlogs.pos\ndrwxrwxrwt  4 hive     hive     4.0K May 24 21:53 hive-scratch\n-rw-r--r--  1 zeppelin zeppelin 1.6M May 24 22:19 primary_results.csv\r\ndrwx------  3 root     root     4.0K May 24 21:51 systemd-private-d6fd211a7444426a83b561f87b390e83-chrony.service-foMYKx\ndrwx------  3 root     root     4.0K May 24 21:51 systemd-private-d6fd211a7444426a83b561f87b390e83-haveged.service-oHcN1X\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535937_100512025",
      "id": "20220524-205418_427962106",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:275",
      "dateFinished": "2022-05-24T22:19:23+0000",
      "dateStarted": "2022-05-24T22:19:23+0000"
    },
    {
      "text": "import org.apache.spark.sql.functions._\nimport org.apache.spark.sql.expressions.Window\nimport org.apache.spark.ml.feature.{VectorAssembler, StringIndexer}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nimport org.apache.spark.ml.tuning.{CrossValidator, CrossValidatorModel, ParamGridBuilder}\nimport org.apache.spark.ml.evaluation.{MulticlassClassificationEvaluator}\nimport org.apache.spark.ml.param.ParamMap\nimport org.apache.spark.sql.types.{IntegerType, DoubleType}\n",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:19:23+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.functions._\nimport org.apache.spark.sql.expressions.Window\nimport org.apache.spark.ml.feature.{VectorAssembler, StringIndexer}\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.classification.{RandomForestClassificationModel, RandomForestClassifier}\nimport org.apache.spark.ml.tuning.{CrossValidator, CrossValidatorModel, ParamGridBuilder}\nimport org.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\nimport org.apache.spark.ml.param.ParamMap\nimport org.apache.spark.sql.types.{IntegerType, DoubleType}\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535937_887461427",
      "id": "20220524-205618_2135182861",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:276",
      "dateFinished": "2022-05-24T22:19:23+0000",
      "dateStarted": "2022-05-24T22:19:23+0000"
    },
    {
      "text": "val results = spark.read\r\n .format(\"csv\")\r\n .option(\"header\", \"true\")\r\n .load(\"file:///var/tmp/primary_results.*\")\r\n\r\nval county = spark.read\r\n .format(\"csv\")\r\n .option(\"header\", \"true\")\r\n  .load(\"file:///var/tmp/county_facts.*\")",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:19:23+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mresults\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [state: string, state_abbreviation: string ... 6 more fields]\n\u001b[1m\u001b[34mcounty\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [column_name: string, description: string]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=154",
              "$$hashKey": "object:36435"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=155",
              "$$hashKey": "object:36436"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535937_2073076315",
      "id": "20220524-210205_1923995734",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:277",
      "dateFinished": "2022-05-24T22:19:25+0000",
      "dateStarted": "2022-05-24T22:19:24+0000"
    },
    {
      "text": "val results_rep = results.filter(col(\"party\") === \"Republican\")",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:19:25+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mresults_rep\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [state: string, state_abbreviation: string ... 6 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535937_1502169811",
      "id": "20220524-210316_344256006",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:278",
      "dateFinished": "2022-05-24T22:19:25+0000",
      "dateStarted": "2022-05-24T22:19:25+0000"
    },
    {
      "text": "//Join results with county\r\nval join_expr = results_rep.col(\"fips\") === county.col(\"fips\").cast(IntegerType)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:19:25+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "org.apache.spark.sql.AnalysisException: Cannot resolve column name \"fips\" among (column_name, description)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$resolveException(Dataset.scala:273)\n  at org.apache.spark.sql.Dataset.$anonfun$resolve$1(Dataset.scala:264)\n  at scala.Option.getOrElse(Option.scala:189)\n  at org.apache.spark.sql.Dataset.resolve(Dataset.scala:264)\n  at org.apache.spark.sql.Dataset.col(Dataset.scala:1372)\n  ... 54 elided\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535937_347149042",
      "id": "20220524-210325_1615320984",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "ERROR",
      "$$hashKey": "object:279",
      "dateFinished": "2022-05-24T22:19:26+0000",
      "dateStarted": "2022-05-24T22:19:25+0000"
    },
    {
      "text": "%md\n-- To load the information, we need to make sense of the file, we use the description in county_facts_dictionry.csv\n-- White, hispanic, college are all represented by percentages\n-- Income represented the medium household income of the county\n-- pop_density = population per square mile\n-- Here we are joining the results files with the county file based on the county id\n-- we'll cast to the respective types, all numberical columns will be doubles",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:37+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>&ndash; To load the information, we need to make sense of the file, we use the description in county_facts_dictionry.csv<br />\n&ndash; White, hispanic, college are all represented by percentages<br />\n&ndash; Income represented the medium household income of the county<br />\n&ndash; pop_density = population per square mile<br />\n&ndash; Here we are joining the results files with the county file based on the county id<br />\n&ndash; we&rsquo;ll cast to the respective types, all numberical columns will be doubles</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535937_2130757015",
      "id": "20220524-212008_681318813",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:280",
      "dateFinished": "2022-05-24T22:10:48+0000",
      "dateStarted": "2022-05-24T22:10:48+0000"
    },
    {
      "text": "val raw_dataset = results_rep.join(county, join_expr).drop(county.col(\"fips\")).select(\r\n col(\"fips\").alias(\"county_id\"), \r\n col(\"area_name\").alias(\"county\"), \r\n col(\"RHI125214\").cast(DoubleType).alias(\"white\"), \r\n col(\"RHI725214\").cast(DoubleType).alias(\"hispanic\"), \r\n col(\"INC110213\").cast(DoubleType).alias(\"income\"), \r\n col(\"EDU685213\").cast(DoubleType).alias(\"college\"),\r\n col(\"POP060210\").cast(DoubleType).alias(\"pop_density\"),\r\n col(\"candidate\"), \r\n col(\"fraction_votes\").cast(DoubleType))",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:48+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mraw_dataset\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [county_id: string, county: string ... 7 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535938_168707787",
      "id": "20220524-210340_791099755",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:281",
      "dateFinished": "2022-05-24T22:10:48+0000",
      "dateStarted": "2022-05-24T22:10:48+0000"
    },
    {
      "text": "raw_dataset.show(5)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:48+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---------+--------------+-----+--------+-------+-------+-----------+------------+--------------+\n|county_id|        county|white|hispanic| income|college|pop_density|   candidate|fraction_votes|\n+---------+--------------+-----+--------+-------+-------+-----------+------------+--------------+\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8|  Ben Carson|         0.146|\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8|Donald Trump|         0.445|\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8| John Kasich|         0.035|\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8| Marco Rubio|         0.148|\n|     1001|Autauga County| 77.9|     2.7|53682.0|   20.9|       91.8|    Ted Cruz|         0.205|\n+---------+--------------+-----+--------+-------+-------+-----------+------------+--------------+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=5",
              "$$hashKey": "object:36494"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535938_1029504912",
      "id": "20220524-212055_954538372",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:282",
      "dateFinished": "2022-05-24T22:10:50+0000",
      "dateStarted": "2022-05-24T22:10:49+0000"
    },
    {
      "text": "%md\r\n### Group by county & Rank by votes  \r\n-- We don't have a winner column but we can derive it (recall feature engineering)\r\n-- We can group the records by county, and within each county we rank the records by fraction_votes\r\n-- Next we filter the records with rank 1\r\n-- We are using a window function to group the records by county",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:50+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Group by county &amp; Rank by votes</h3>\n<p>&ndash; We don&rsquo;t have a winner column but we can derive it (recall feature engineering)<br />\n&ndash; We can group the records by county, and within each county we rank the records by fraction_votes<br />\n&ndash; Next we filter the records with rank 1<br />\n&ndash; We are using a window function to group the records by county</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535938_487396228",
      "id": "20220524-212135_448016882",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:283",
      "dateFinished": "2022-05-24T22:10:50+0000",
      "dateStarted": "2022-05-24T22:10:50+0000"
    },
    {
      "text": "%spark\r\n\r\nval windowSpec = Window.partitionBy(col(\"county_id\")).orderBy(col(\"fraction_votes\").desc)\r\nval ranking = rank().over(windowSpec)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:51+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mwindowSpec\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.expressions.WindowSpec\u001b[0m = org.apache.spark.sql.expressions.WindowSpec@215ed741\n\u001b[1m\u001b[34mranking\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Column\u001b[0m = RANK() OVER (PARTITION BY county_id ORDER BY fraction_votes DESC NULLS LAST unspecifiedframe$())\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535938_1452176001",
      "id": "20220524-210430_1901327476",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:284",
      "dateFinished": "2022-05-24T22:10:51+0000",
      "dateStarted": "2022-05-24T22:10:51+0000"
    },
    {
      "text": "%md\n\n-- Next we select the columns that we need\n-- And we fetch just the records with rank 1\n-- We are also filtering out a candidate called Ben Carson\n-- Ben Carson dropped out and it causes issues here\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:51+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>&ndash; Next we select the columns that we need<br />\n&ndash; And we fetch just the records with rank 1<br />\n&ndash; We are also filtering out a candidate called Ben Carson<br />\n&ndash; Ben Carson dropped out and it causes issues here</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535938_1496301846",
      "id": "20220524-212631_495766903",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:285",
      "dateFinished": "2022-05-24T22:10:51+0000",
      "dateStarted": "2022-05-24T22:10:51+0000"
    },
    {
      "text": "\r\nval dataset = raw_dataset.select(col(\"county_id\"), col(\"county\"), col(\"white\"), col(\"hispanic\"), \r\n col(\"income\"), col(\"college\"), col(\"pop_density\"), col(\"candidate\"), col(\"fraction_votes\"), ranking.alias(\"rank\"))\r\n .filter(col(\"rank\") === lit(1) and !(col(\"candidate\") === lit(\"Ben Carson\")))",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:52+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mdataset\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [county_id: string, county: string ... 8 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535938_1570138122",
      "id": "20220524-210434_1141201020",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:286",
      "dateFinished": "2022-05-24T22:10:57+0000",
      "dateStarted": "2022-05-24T22:10:56+0000"
    },
    {
      "text": "%md\n-- Split our dataset into training and test data typical 80 20\n-- we give a seed so we have the same random data in each set",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:57+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>&ndash; Split our dataset into training and test data typical 80 20<br />\n&ndash; we give a seed so we have the same random data in each set</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535938_431455084",
      "id": "20220524-212723_1534824503",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:287",
      "dateFinished": "2022-05-24T22:10:57+0000",
      "dateStarted": "2022-05-24T22:10:57+0000"
    },
    {
      "text": "%spark\r\nval Array(trainingData, testData) = dataset.randomSplit(Array(0.8, 0.2), 754) ",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:57+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mtrainingData\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [county_id: string, county: string ... 8 more fields]\n\u001b[1m\u001b[34mtestData\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [county_id: string, county: string ... 8 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535938_315045350",
      "id": "20220524-210457_1685710338",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:288",
      "dateFinished": "2022-05-24T22:10:58+0000",
      "dateStarted": "2022-05-24T22:10:57+0000"
    },
    {
      "text": "%md\n### Index the candidate (String) column\n-- Our candidate column is of type string --> not very good for ML algorithms\n-- We use the StringIndexer to index the column values to number \n-- Ex Donald Trump = 1, Ted Cruz = 2, etc...\n-- We call this new column \"candidate_index\"\n-- note this is the reason we get rid of Ben Carson --> he only has two values, can end up in test set \n-- model will train it based on the training set and will give error (what is ben carson)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:58+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Index the candidate (String) column</h3>\n<p>&ndash; Our candidate column is of type string &ndash;&gt; not very good for ML algorithms<br />\n&ndash; We use the StringIndexer to index the column values to number<br />\n&ndash; Ex Donald Trump = 1, Ted Cruz = 2, etc&hellip;<br />\n&ndash; We call this new column &ldquo;candidate_index&rdquo;<br />\n&ndash; note this is the reason we get rid of Ben Carson &ndash;&gt; he only has two values, can end up in test set<br />\n&ndash; model will train it based on the training set and will give error (what is ben carson)</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535939_1388364408",
      "id": "20220524-212748_70142815",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:289",
      "dateFinished": "2022-05-24T22:10:58+0000",
      "dateStarted": "2022-05-24T22:10:58+0000"
    },
    {
      "text": "%spark\r\n\r\nval indexer = new StringIndexer()\r\n  .setInputCol(\"candidate\")\r\n  .setOutputCol(\"candidate_indexed\")    ",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:10:58+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mindexer\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.StringIndexer\u001b[0m = strIdx_69210c73cf9a\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535939_2003973103",
      "id": "20220524-210525_1112591570",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:290",
      "dateFinished": "2022-05-24T22:10:59+0000",
      "dateStarted": "2022-05-24T22:10:58+0000"
    },
    {
      "text": "%md\r\n### Assemble all features\r\n-- Next we assemble our features using vector assembler, this time we have more than one feature",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:16+0000",
      "progress": 0,
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Assemble all features</h3>\n<p>&ndash; Next we assemble our features using vector assembler, this time we have more than one feature</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535939_1775588292",
      "id": "20220524-210543_1297999423",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:291",
      "dateFinished": "2022-05-24T22:11:17+0000",
      "dateStarted": "2022-05-24T22:11:17+0000"
    },
    {
      "text": "%spark\nval assembler = new VectorAssembler()\n .setInputCols(Array(\"white\", \"hispanic\", \"income\", \"college\", \"pop_density\"))\n .setOutputCol(\"assembled-features\")",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:09+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34massembler\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.feature.VectorAssembler\u001b[0m = VectorAssembler: uid=vecAssembler_1685a1c1b151, handleInvalid=error, numInputCols=5\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535939_1624491249",
      "id": "20220524-212938_1299558361",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:292",
      "dateFinished": "2022-05-24T22:11:09+0000",
      "dateStarted": "2022-05-24T22:11:09+0000"
    },
    {
      "text": "%md\n### Random Forest  \n-- We now create a new random forest object \n-- give features (as a vector)\n-- give the label as candiate_indexed (can't use the string column)\n",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:09+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Random Forest</h3>\n<p>&ndash; We now create a new random forest object<br />\n&ndash; give features (as a vector)<br />\n&ndash; give the label as candiate_indexed (can&rsquo;t use the string column)</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535939_1216094238",
      "id": "20220524-212948_21459642",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:293",
      "dateFinished": "2022-05-24T22:11:09+0000",
      "dateStarted": "2022-05-24T22:11:09+0000"
    },
    {
      "text": "%spark\r\n\r\nval rf = new RandomForestClassifier()\r\n .setFeaturesCol(\"assembled-features\")\r\n .setLabelCol(\"candidate_indexed\")\r\n .setSeed(1234)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:09+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mrf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.classification.RandomForestClassifier\u001b[0m = rfc_757eda2c7053\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535939_288200954",
      "id": "20220524-210558_1855554244",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:294",
      "dateFinished": "2022-05-24T22:11:10+0000",
      "dateStarted": "2022-05-24T22:11:10+0000"
    },
    {
      "text": "%md\r\n### Set up pipeline\r\n-- Use pipepline to set our stages\r\n-- So our stages are the string indexer, the vector assembler and the random forest classifier object\r\n",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:10+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Set up pipeline</h3>\n<p>&ndash; Use pipepline to set our stages<br />\n&ndash; So our stages are the string indexer, the vector assembler and the random forest classifier object</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535939_1338080329",
      "id": "20220524-210735_247871367",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:295",
      "dateFinished": "2022-05-24T22:11:10+0000",
      "dateStarted": "2022-05-24T22:11:10+0000"
    },
    {
      "text": "%spark\nval pipeline = new Pipeline()\n  .setStages(Array(indexer, assembler, rf))",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:10+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mpipeline\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.Pipeline\u001b[0m = pipeline_96354ebd9a81\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535940_2098490261",
      "id": "20220524-213029_1138249072",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:296",
      "dateFinished": "2022-05-24T22:11:11+0000",
      "dateStarted": "2022-05-24T22:11:10+0000"
    },
    {
      "text": "%md\n### Evaluate the model\n-- Next we provide the evaluator\n-- For regressoin we used RegressionEvaluator\n-- the metric accuracy was simply a percentage\n-- Here we are using MulticlassClassificationEvaluator\n-- we compared candidate_indexed ot the prediction column\n-- IF the match, prediction is good else it is unsuccession\n-- metric \"accuracy\" is basically percentage of accurate results\n",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:11+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Evaluate the model</h3>\n<p>&ndash; Next we provide the evaluator<br />\n&ndash; For regressoin we used RegressionEvaluator<br />\n&ndash; the metric accuracy was simply a percentage<br />\n&ndash; Here we are using MulticlassClassificationEvaluator<br />\n&ndash; we compared candidate_indexed ot the prediction column<br />\n&ndash; IF the match, prediction is good else it is unsuccession<br />\n&ndash; metric &ldquo;accuracy&rdquo; is basically percentage of accurate results</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535940_771457202",
      "id": "20220524-213043_337255215",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:297",
      "dateFinished": "2022-05-24T22:11:11+0000",
      "dateStarted": "2022-05-24T22:11:11+0000"
    },
    {
      "text": "%spark\r\nval evaluator = new MulticlassClassificationEvaluator()\r\n  .setLabelCol(\"candidate_indexed\")\r\n  .setPredictionCol(\"prediction\")\r\n  .setMetricName(\"accuracy\")",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:11+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mevaluator\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.evaluation.MulticlassClassificationEvaluator\u001b[0m = MulticlassClassificationEvaluator: uid=mcEval_04ba80a4d1ad, metricName=accuracy, metricLabel=0.0, beta=1.0, eps=1.0E-15\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535940_1134196345",
      "id": "20220524-210746_1744736681",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:298",
      "dateFinished": "2022-05-24T22:11:11+0000",
      "dateStarted": "2022-05-24T22:11:11+0000"
    },
    {
      "text": "%md\n### Hyper parameters\n-- First is maxDepth, it's an array with two values, 5, 10 \n-- maxDepth puts a limit on how deep we can construct the tree\n-- Remember, we said that with decision trees main problem was overfitting the data\n-- random forest does a better job but still, there is an issue if we allow the tree to be too deep\n-- so good idea to set the max depth\n-- Second is impurity which we give as entropy (there are other statistical methods to select features).",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:11+0000",
      "progress": 0,
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Hyper parameters</h3>\n<p>&ndash; First is maxDepth, it&rsquo;s an array with two values, 5, 10<br />\n&ndash; maxDepth puts a limit on how deep we can construct the tree<br />\n&ndash; Remember, we said that with decision trees main problem was overfitting the data<br />\n&ndash; random forest does a better job but still, there is an issue if we allow the tree to be too deep<br />\n&ndash; so good idea to set the max depth<br />\n&ndash; Second is impurity which we give as entropy (there are other statistical methods to select features).</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535940_99970838",
      "id": "20220524-213122_1395868401",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:299",
      "dateFinished": "2022-05-24T22:11:12+0000",
      "dateStarted": "2022-05-24T22:11:12+0000"
    },
    {
      "text": "%spark\r\n\r\nval paramGrid = new ParamGridBuilder()  \r\n  .addGrid(rf.maxDepth, Array(3, 5))\r\n  .addGrid(rf.impurity, Array(\"entropy\",\"gini\")).build()",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:12+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mparamGrid\u001b[0m: \u001b[1m\u001b[32mArray[org.apache.spark.ml.param.ParamMap]\u001b[0m =\nArray({\n\trfc_757eda2c7053-impurity: entropy,\n\trfc_757eda2c7053-maxDepth: 3\n}, {\n\trfc_757eda2c7053-impurity: entropy,\n\trfc_757eda2c7053-maxDepth: 5\n}, {\n\trfc_757eda2c7053-impurity: gini,\n\trfc_757eda2c7053-maxDepth: 3\n}, {\n\trfc_757eda2c7053-impurity: gini,\n\trfc_757eda2c7053-maxDepth: 5\n})\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535940_208874394",
      "id": "20220524-210802_1979176409",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:300",
      "dateFinished": "2022-05-24T22:11:12+0000",
      "dateStarted": "2022-05-24T22:11:12+0000"
    },
    {
      "text": "%md\n### Cross validate model\n-- Next we tie everything together with cross-validator\n-- We set the pipeline for estimator\n-- Multiclassevaluator for evaluator\n-- Set the hyper parameters and the number of folds\n-- Cross validator will divide the training data set into 3\n-- Next each fold is coupled with the paramters for each type\n-- Fold 1 is tried with max depth 3 and entropy and then fold 1 is again tried but this time with max depth 5 and entrop\n-- Next fold 2 is tried with max depth 3 and entropy, and again with max depth 5 and entropy\n-- And so on ...\n-- In total, we will have 3 (folds) x 2 (depth) x 2 (algorithms) = 12 models\n-- the best model is picked",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:12+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Cross validate model</h3>\n<p>&ndash; Next we tie everything together with cross-validator<br />\n&ndash; We set the pipeline for estimator<br />\n&ndash; Multiclassevaluator for evaluator<br />\n&ndash; Set the hyper parameters and the number of folds<br />\n&ndash; Cross validator will divide the training data set into 3<br />\n&ndash; Next each fold is coupled with the paramters for each type<br />\n&ndash; Fold 1 is tried with max depth 3 and entropy and then fold 1 is again tried but this time with max depth 5 and entrop<br />\n&ndash; Next fold 2 is tried with max depth 3 and entropy, and again with max depth 5 and entropy<br />\n&ndash; And so on &hellip;<br />\n&ndash; In total, we will have 3 (folds) x 2 (depth) x 2 (algorithms) = 12 models<br />\n&ndash; the best model is picked</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535940_752670803",
      "id": "20220524-213200_1654800835",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:301",
      "dateFinished": "2022-05-24T22:11:13+0000",
      "dateStarted": "2022-05-24T22:11:13+0000"
    },
    {
      "text": "%spark\r\nval cross_validator = new CrossValidator()\r\n  .setEstimator(pipeline)\r\n  .setEvaluator(evaluator)\r\n  .setEstimatorParamMaps(paramGrid)\r\n  .setNumFolds(3)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:13+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mcross_validator\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.tuning.CrossValidator\u001b[0m = cv_fe2e9a032da9\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535941_1287802061",
      "id": "20220524-210819_645808556",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:302",
      "dateFinished": "2022-05-24T22:11:13+0000",
      "dateStarted": "2022-05-24T22:11:13+0000"
    },
    {
      "text": "%md\n### Training\n-- Train the model on training data\n-- Gives us the best model from the 6 variations\n",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:13+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Training</h3>\n<p>&ndash; Train the model on training data<br />\n&ndash; Gives us the best model from the 6 variations</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535941_1823996024",
      "id": "20220524-213222_2035364939",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:303",
      "dateFinished": "2022-05-24T22:11:15+0000",
      "dateStarted": "2022-05-24T22:11:15+0000"
    },
    {
      "text": "%spark\r\nval cvModel = cross_validator.fit(trainingData)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:11:15+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mcvModel\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.ml.tuning.CrossValidatorModel\u001b[0m = CrossValidatorModel: uid=cv_fe2e9a032da9, bestModel=pipeline_96354ebd9a81, numFolds=3\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=7",
              "$$hashKey": "object:36499"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=9",
              "$$hashKey": "object:36500"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=10",
              "$$hashKey": "object:36501"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=11",
              "$$hashKey": "object:36502"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=12",
              "$$hashKey": "object:36503"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=13",
              "$$hashKey": "object:36504"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=14",
              "$$hashKey": "object:36505"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=15",
              "$$hashKey": "object:36506"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=16",
              "$$hashKey": "object:36507"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=17",
              "$$hashKey": "object:36508"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=18",
              "$$hashKey": "object:36509"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=19",
              "$$hashKey": "object:36510"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=20",
              "$$hashKey": "object:36511"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=21",
              "$$hashKey": "object:36512"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=22",
              "$$hashKey": "object:36513"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=23",
              "$$hashKey": "object:36514"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=24",
              "$$hashKey": "object:36515"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=25",
              "$$hashKey": "object:36516"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=26",
              "$$hashKey": "object:36517"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=27",
              "$$hashKey": "object:36518"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=28",
              "$$hashKey": "object:36519"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=29",
              "$$hashKey": "object:36520"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=30",
              "$$hashKey": "object:36521"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=31",
              "$$hashKey": "object:36522"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=32",
              "$$hashKey": "object:36523"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=33",
              "$$hashKey": "object:36524"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=34",
              "$$hashKey": "object:36525"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=35",
              "$$hashKey": "object:36526"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=36",
              "$$hashKey": "object:36527"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=37",
              "$$hashKey": "object:36528"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=38",
              "$$hashKey": "object:36529"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=39",
              "$$hashKey": "object:36530"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=40",
              "$$hashKey": "object:36531"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=41",
              "$$hashKey": "object:36532"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=42",
              "$$hashKey": "object:36533"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=43",
              "$$hashKey": "object:36534"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=44",
              "$$hashKey": "object:36535"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=45",
              "$$hashKey": "object:36536"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=46",
              "$$hashKey": "object:36537"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=47",
              "$$hashKey": "object:36538"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=48",
              "$$hashKey": "object:36539"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=49",
              "$$hashKey": "object:36540"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=50",
              "$$hashKey": "object:36541"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=51",
              "$$hashKey": "object:36542"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=52",
              "$$hashKey": "object:36543"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=53",
              "$$hashKey": "object:36544"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=54",
              "$$hashKey": "object:36545"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=55",
              "$$hashKey": "object:36546"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=56",
              "$$hashKey": "object:36547"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=57",
              "$$hashKey": "object:36548"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=58",
              "$$hashKey": "object:36549"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=59",
              "$$hashKey": "object:36550"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=60",
              "$$hashKey": "object:36551"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=61",
              "$$hashKey": "object:36552"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=62",
              "$$hashKey": "object:36553"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=63",
              "$$hashKey": "object:36554"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=64",
              "$$hashKey": "object:36555"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=65",
              "$$hashKey": "object:36556"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=66",
              "$$hashKey": "object:36557"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=67",
              "$$hashKey": "object:36558"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=68",
              "$$hashKey": "object:36559"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=69",
              "$$hashKey": "object:36560"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=70",
              "$$hashKey": "object:36561"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=71",
              "$$hashKey": "object:36562"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=72",
              "$$hashKey": "object:36563"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=73",
              "$$hashKey": "object:36564"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=74",
              "$$hashKey": "object:36565"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=75",
              "$$hashKey": "object:36566"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=76",
              "$$hashKey": "object:36567"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=77",
              "$$hashKey": "object:36568"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=78",
              "$$hashKey": "object:36569"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=79",
              "$$hashKey": "object:36570"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=80",
              "$$hashKey": "object:36571"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=81",
              "$$hashKey": "object:36572"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=82",
              "$$hashKey": "object:36573"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=83",
              "$$hashKey": "object:36574"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=84",
              "$$hashKey": "object:36575"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=85",
              "$$hashKey": "object:36576"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=86",
              "$$hashKey": "object:36577"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=87",
              "$$hashKey": "object:36578"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=88",
              "$$hashKey": "object:36579"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=89",
              "$$hashKey": "object:36580"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=90",
              "$$hashKey": "object:36581"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=91",
              "$$hashKey": "object:36582"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=92",
              "$$hashKey": "object:36583"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=93",
              "$$hashKey": "object:36584"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=94",
              "$$hashKey": "object:36585"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=95",
              "$$hashKey": "object:36586"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=96",
              "$$hashKey": "object:36587"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=97",
              "$$hashKey": "object:36588"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=98",
              "$$hashKey": "object:36589"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=99",
              "$$hashKey": "object:36590"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=100",
              "$$hashKey": "object:36591"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=101",
              "$$hashKey": "object:36592"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=102",
              "$$hashKey": "object:36593"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=103",
              "$$hashKey": "object:36594"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=104",
              "$$hashKey": "object:36595"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=105",
              "$$hashKey": "object:36596"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=106",
              "$$hashKey": "object:36597"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=107",
              "$$hashKey": "object:36598"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=108",
              "$$hashKey": "object:36599"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=109",
              "$$hashKey": "object:36600"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=110",
              "$$hashKey": "object:36601"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=111",
              "$$hashKey": "object:36602"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=112",
              "$$hashKey": "object:36603"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=113",
              "$$hashKey": "object:36604"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=114",
              "$$hashKey": "object:36605"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=115",
              "$$hashKey": "object:36606"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=116",
              "$$hashKey": "object:36607"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=117",
              "$$hashKey": "object:36608"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=118",
              "$$hashKey": "object:36609"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=119",
              "$$hashKey": "object:36610"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=120",
              "$$hashKey": "object:36611"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=121",
              "$$hashKey": "object:36612"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=122",
              "$$hashKey": "object:36613"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=123",
              "$$hashKey": "object:36614"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=124",
              "$$hashKey": "object:36615"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=125",
              "$$hashKey": "object:36616"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=126",
              "$$hashKey": "object:36617"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=127",
              "$$hashKey": "object:36618"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=128",
              "$$hashKey": "object:36619"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=129",
              "$$hashKey": "object:36620"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=131",
              "$$hashKey": "object:36621"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=132",
              "$$hashKey": "object:36622"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=133",
              "$$hashKey": "object:36623"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=135",
              "$$hashKey": "object:36624"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=137",
              "$$hashKey": "object:36625"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=138",
              "$$hashKey": "object:36626"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=139",
              "$$hashKey": "object:36627"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=140",
              "$$hashKey": "object:36628"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=141",
              "$$hashKey": "object:36629"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=142",
              "$$hashKey": "object:36630"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=143",
              "$$hashKey": "object:36631"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=144",
              "$$hashKey": "object:36632"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=145",
              "$$hashKey": "object:36633"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=147",
              "$$hashKey": "object:36634"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535941_289612721",
      "id": "20220524-210835_1867685249",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:304",
      "dateFinished": "2022-05-24T22:12:07+0000",
      "dateStarted": "2022-05-24T22:11:15+0000"
    },
    {
      "text": "%md\n### Predicting with test data\n-- Transform testData with predictions",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:12:07+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Predicting with test data</h3>\n<p>&ndash; Transform testData with predictions</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535941_518730123",
      "id": "20220524-213326_101929050",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:305",
      "dateFinished": "2022-05-24T22:12:07+0000",
      "dateStarted": "2022-05-24T22:12:07+0000"
    },
    {
      "text": "%spark\r\nval predictions = cvModel.transform(testData)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:12:07+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mpredictions\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [county_id: string, county: string ... 13 more fields]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535941_1324415561",
      "id": "20220524-210845_537603845",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:306",
      "dateFinished": "2022-05-24T22:12:12+0000",
      "dateStarted": "2022-05-24T22:12:12+0000"
    },
    {
      "text": "%spark\npredictions.select(\"candidate\",\"candidate_indexed\",\"rawPrediction\").show(20)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:12:12+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+-----------------+--------------------+\n|   candidate|candidate_indexed|       rawPrediction|\n+------------+-----------------+--------------------+\n|Donald Trump|              0.0|[17.6758731729048...|\n|Donald Trump|              0.0|[18.1437783684147...|\n|Donald Trump|              0.0|[15.2904037366935...|\n|Donald Trump|              0.0|[17.1235065160825...|\n|Donald Trump|              0.0|[15.5971349630430...|\n|Donald Trump|              0.0|[15.7242220025461...|\n|Donald Trump|              0.0|[16.5065370163357...|\n|Donald Trump|              0.0|[15.4320367041111...|\n|Donald Trump|              0.0|[17.8012095670760...|\n|Donald Trump|              0.0|[18.3149073377815...|\n|Donald Trump|              0.0|[18.5991341021580...|\n|Donald Trump|              0.0|[16.6962572724867...|\n|Donald Trump|              0.0|[10.7739907452800...|\n|Donald Trump|              0.0|[17.2532041862221...|\n|Donald Trump|              0.0|[17.5275056449279...|\n|Donald Trump|              0.0|[16.0213411339757...|\n|Donald Trump|              0.0|[15.7456018117265...|\n|Donald Trump|              0.0|[15.4077456518268...|\n|Donald Trump|              0.0|[18.4221688234127...|\n|Donald Trump|              0.0|[18.1074345440744...|\n+------------+-----------------+--------------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=149",
              "$$hashKey": "object:37315"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=150",
              "$$hashKey": "object:37316"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535941_406283515",
      "id": "20220524-213411_820575387",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:307",
      "dateFinished": "2022-05-24T22:12:13+0000",
      "dateStarted": "2022-05-24T22:12:12+0000"
    },
    {
      "text": "%md\n### Evaluating the model\n-- check with actual values and print accuracy\n",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:12:13+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Evaluating the model</h3>\n<p>&ndash; check with actual values and print accuracy</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535941_1846411776",
      "id": "20220524-213430_1842724275",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:308",
      "dateFinished": "2022-05-24T22:12:14+0000",
      "dateStarted": "2022-05-24T22:12:14+0000"
    },
    {
      "text": "%spark\r\nval accuracy = evaluator.evaluate(predictions)\r\nprintln(\"accuracy on test data = \" + accuracy)",
      "user": "anonymous",
      "dateUpdated": "2022-05-24T22:12:15+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "accuracy on test data = 0.752851711026616\n\u001b[1m\u001b[34maccuracy\u001b[0m: \u001b[1m\u001b[32mDouble\u001b[0m = 0.752851711026616\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=152",
              "$$hashKey": "object:37328"
            },
            {
              "jobUrl": "http://spark-m.us-central1-c.c.my-project-342303.internal:42435/jobs/job?id=153",
              "$$hashKey": "object:37329"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1653429535942_1956618967",
      "id": "20220524-210854_167807770",
      "dateCreated": "2022-05-24T21:58:55+0000",
      "status": "FINISHED",
      "$$hashKey": "object:309",
      "dateFinished": "2022-05-24T22:12:16+0000",
      "dateStarted": "2022-05-24T22:12:15+0000"
    }
  ],
  "name": "Spark_Classification_Election",
  "id": "2H55X1UNR",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.1-SNAPSHOT",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Spark_Classification_Election"
}